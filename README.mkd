# Ionide-Vim

**F# support for Vim/Neovim**

_Part of the [Ionide](http://ionide.io) plugin suite._

## About Ionide-Vim

* A fork of [fsharp/vim-fsharp](https://github.com/fsharp/vim-fsharp).

* Uses LSP-mode of [FsAutoComplete](https://github.com/fsharp/FsAutoComplete) as a backend.

* Powered by [autozimu/LanguageClient-neovim](https://github.com/autozimu/LanguageClient-neovim).

## Development Status

Consider this to be beta since it's lacking features compared to Ionide-VSCode and not as battle-tested as that.

That being said, we maintainers use this plugin daily so it will someday become feature-rich and stable for sure.

Feel free to [request features and/or file bug reports](https://github.com/ionide/Ionide-vim/issues)!

## Requirements

* Neovim or Vim 8.0+
  - Python support is not required as of now. This may or may not change in the future.

* [.NET Core SDK](https://dotnet.microsoft.com/download)
  - Required to run FsAutoComplete.
  - Very useful for command-line development.

* [LanguageClient-neovim](https://github.com/autozimu/LanguageClient-neovim)
  - Required to communicate with FsAutoComplete.

* [fzf](https://github.com/junegunn/fzf) (optional)
  - Optional dependency of LanguageClient-neovim.
  - Multi-entry selection UI.

## Features

- Syntax highlighting
- Auto completions
- Error highlighting
- Tooltips
- Method parameter hints
- Go to Definition
- Find all references
- Highlighting usages
- Rename
- Show symbols in file
- Find symbol in workspace
- Show signature in status line

## Getting Started

### 1. Install [LanguageClient-neovim](https://github.com/autozimu/LanguageClient-neovim)

Refer to [their INSTALL.md](https://github.com/autozimu/LanguageClient-neovim/blob/next/INSTALL.md).

### 2. Install Ionide-vim

#### Installing with your plugin manager

##### [vim-plug](https://github.com/junegunn/vim-plug)

~~~.vim
Plug 'ionide/Ionide-vim', {
      \ 'do':  'make fsautocomplete',
      \}
~~~

##### [dein.vim](https://github.com/Shougo/dein.vim)

~~~.vim
call dein#add('ionide/Ionide-vim', {
    \ 'build': 'make fsautocomplete',
    \ })
~~~

#$## Installing on Windows

Run `install.cmd`.

### 3. Setting up the language client

Once you installed, add the following to somewhere in your `.vimrc`:

```vim
let g:LanguageClient_serverCommands = {
  \ 'fsharp': g:fsharp#languageserver_command
  \ }
```

This will configure FSAC to be used from LanguageClient-neovim.

## Usage

Opening either `*.fs`, `*.fsi` or `*.fsx` files should trigger syntax highlighting and other depending runtime files as well.

### Commands

Refer to [LanguageClient-neovim](https://github.com/autozimu/LanguageClient-neovim) for features provided via Language Server Protocol.

To be added as requested for F#-specific features.

* `:FSharpLoadWorkspaceAuto`
  - Guess a workspace (`sln` or `fsproj`) and then load it.
  - Equivalent to `FSharp.workspaceMode = sln` in Ionide-VSCode.
  - Automatically called when you open F# files. Can be disabled in settings.
* `:FSharpParseProject <files>+`
  - Load specified projects (`sln` or `fsproj`).
* `:FSharpReloadWorkspace`
  - Reload all the projects currently loaded.
  - Automatically called when you save `.fsproj` files. Can be disabled in settings.

### Settings

Refer to [LanguageClient-neovim](https://github.com/autozimu/LanguageClient-neovim) for features provided via Language Server Protocol.

To be added as requested for F#-specific features.

#### Show type signature at cursor position (default: 1).

~~~.vim
let g:fsharp#show_signature_on_cursor_move = 1 " 0 to disable.
~~~

#### Enable/disable automatic calling of `:FSharpLoadWorkspaceAuto`. (default: 1)

~~~.vim
let g:fsharp#automatic_workspace_init = 1 " 0 to disable.
~~~

#### Enable/disable automatic calling of `:FSharpReloadWorkspace`. (default: 1)

~~~.vim
let g:fsharp#automatic_reload_workspace = 1 " 0 to disable.
~~~

## Maintainers

* The primary maintainer for this repository is [@cannorin](http://github.com/cannorin).

